<?xml version="1.0"?>

<!-- ===================================================================== -->
<!-- Ultra simple Ant build file                                           -->
<!-- ===================================================================== -->
<project name="jabber" default="test" basedir=".">
  <property name="version" value="1.0"/>

  <!-- Compile options (you may want to change these) -->
  <property name="c.debug.on"         value="on"/>
  <property name="c.depreciation.on"  value="on"/>
  <property name="c.optimize.on"      value="on"/>

  <!-- Give user a chance to override -->
  <property file="${user.home}/.ant.properties" />

  <!-- =================================================================== -->
  <!-- Distribution is just compiling and documenting                      -->
  <!-- =================================================================== -->
  <target name="dist" depends="compile,docs"/>

  <!-- =================================================================== -->
  <!-- Compiles all source code                                            -->
  <!-- =================================================================== -->
  <target name="compile">
    <mkdir dir="classes"/>

    <!-- First compile the source -->
    <javac srcdir="src"
           destdir="classes"
           excludes="**/*.*ml"
           debug="${c.debug.on}"
           deprecation="${c.depreciation.on}"
           optimize="${c.optimize.on}" >
    </javac>
    
    <!-- package all non-test classes into handy jar files -->
    <jar jarfile="bin/jabber.jar"
         basedir="classes"
         includes="com/metamech/io/**,com/metamech/jabber/**,com/metamech/log/**"
         excludes="**/*Test.class,**/AllTests.class"/>
   <jar jarfile="bin/server.jar"
         basedir="classes"
         includes="com/metamech/vorpal/**"
        excludes="**/*Test.class,**/AllTests.class"/>
  </target>

  <!-- =================================================================== -->
  <!-- Runs JUnit tests                                                    -->
  <!-- =================================================================== -->
  <target name="test" depends="compile">
    <mkdir dir="results"/>

    <junit printsummary="yes" haltonfailure="yes" fork="yes" dir=".">
      
      <!-- We must add our own classes to the classpath for testing -->
      <classpath>
        <pathelement path="classes"/>
        <pathelement path="../lib/xerces.jar"/>
      </classpath>
      
      <formatter type="plain"/>
      
      <batchtest todir="results">
        <fileset dir="src">
          <include name="**/*Test.java" />
          <exclude name="**/AllTests.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>
  
  <!-- =================================================================== -->
  <!-- Generate documentation                                              -->
  <!-- =================================================================== -->
  <target name="docs">
    <antcall target="makedoc">
      <param name="docdir"   value="docs/server"/>
      <param name="packname" value="com.metamech.vorpal.*"/>
      <param name="title"    value="Jabber Server"/>
    </antcall>
    <antcall target="makedoc">
      <param name="docdir"   value="docs/common"/>
      <param name="packname" value="com.metamech.io.*,com.metamech.jabber.*,com.metamech.log.*"/>
      <param name="title"    value="Jabber Common Code"/>
    </antcall>
    <antcall target="makedoc">
      <param name="docdir"   value="docs/all"/>
      <param name="packname" value="com.metamech.*"/>
      <param name="title"    value="All Jabber Code"/>
    </antcall>
  </target>
  <target name="makedoc">
    <mkdir dir="${docdir}"/>
    <javadoc packagenames="com.*"
             sourcepath="src"
             destdir="${docdir}"
             author="true"
             version="true"
             windowtitle="IM in Java: ${title}"
             doctitle="IM in Java: ${title}"
             bottom="IM in Java: ${title} ${version}"
    />
  </target>
  
  <!-- =================================================================== -->
  <!-- Cleans up generated stuff                                           -->
  <!-- =================================================================== -->
  <target name="clean">
    <delete dir="classes"/>
    <delete dir="results"/>
  </target>

  <!-- =================================================================== -->
  <!-- Total cleanup                                                       -->
  <!-- =================================================================== -->
  <target name="clean-all" depends="clean">
    <delete dir="docs"/>
    <delete>
      <fileset dir="bin" includes="*.jar"/>
    </delete>
  </target>

</project>
