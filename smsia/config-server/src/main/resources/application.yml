#
#   This is the core configuration for a configuration service.  I have two examples here:
#
#       -  A configuration service which completely loads the configuration for the services
#          from the local file server of the config service.  This should only be used for
#          demonstration purposes or for a small application with a limited number of services.
#
#       -  A configuraton service that uses a git-based repository to read the files from
#

####
#github solution
####

#server:
#  port: 8888
#spring:
#  cloud:
#    config:
#      server:
#        encrypt.enabled: false
#        git:
#          uri: https://github.com/carnellj/config-repo/
#          searchPaths: licensingservice,organizationservice
#          username: native-cloud-apps
#          password: 0ffended


####
#Classpath and file-based solution
####

server:
   port: 8888
spring:
  profiles:
    active: native
  cloud:
     config:
       server:
         bootstrap: true
         native:
           searchLocations: classpath:config/,classpath:config/user-service,classpath:config/order-service,classpath:config/zuul-server
#             searchLocations: file:config/licensing-service,file:config/organization-service

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
