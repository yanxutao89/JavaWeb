<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yxt.crud.mapper.OrderMapper">

	<resultMap id="BaseResultMap" type="com.yxt.curd.bean.Order">
		<id property="orderId" column="order_id" jdbcType="BIGINT"/>
		<result property="status" column="status" jdbcType="INTEGER"/>
		<result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
		<result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
	</resultMap>

	<sql id="BaseColumnList">
		order_id,
		status,
		create_time,
		update_time
	</sql>

	<select id="selectOrder" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		order_id					AS orderId,
		status					AS status,
		create_time					AS createTime,
		update_time					AS updateTime
		FROM ms_order
		WHERE 1 = 1
		<if test="orderId != null" >AND order_id = #{orderId,jdbcType=BIGINT}</if>
	</select>

	<insert id="insertOrder">
		INSERT INTO ms_order
		(
			order_id,
			status,
			create_time,
			update_time
		)
		VALUES
		(
			#{orderId,jdbcType=BIGINT},
			#{status,jdbcType=INTEGER},
			#{createTime,jdbcType=TIMESTAMP},
			#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>

	<insert id="insertOrderSelective">
		INSERT INTO ms_order
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="orderId != null" >order_id,</if>
			<if test="status != null" >status,</if>
			<if test="createTime != null" >create_time,</if>
			<if test="updateTime != null" >update_time,</if>
		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides="," >
			<if test="orderId != null" >#{orderId,jdbcType=BIGINT},</if>
			<if test="status != null" >#{status,jdbcType=INTEGER},</if>
			<if test="createTime != null" >#{createTime,jdbcType=TIMESTAMP},</if>
			<if test="updateTime != null" >#{updateTime,jdbcType=TIMESTAMP},</if>
		</trim>
	</insert>

	<insert id="insertOrderBatch" parameterType="java.util.List">
		INSERT INTO ms_order
		(
			order_id,
			status,
			create_time,
			update_time
		)
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
		(
			#{orderId,jdbcType=BIGINT},
			#{status,jdbcType=INTEGER},
			#{createTime,jdbcType=TIMESTAMP},
			#{updateTime,jdbcType=TIMESTAMP}
		)
		</foreach>
	</insert>

	<update id="updateOrder">
		UPDATE ms_order
		SET
			status=#{status,jdbcType=INTEGER},
			create_time=#{createTime,jdbcType=TIMESTAMP},
			update_time=#{updateTime,jdbcType=TIMESTAMP}
		WHERE
			order_id=#{orderId,jdbcType=BIGINT}
	</update>

	<update id="updateOrderSelective">
		UPDATE ms_order
		<set>
			<if test="status != null" >status=#{status,jdbcType=INTEGER},</if>
			<if test="createTime != null" >create_time=#{createTime,jdbcType=TIMESTAMP},</if>
			<if test="updateTime != null" >update_time=#{updateTime,jdbcType=TIMESTAMP},</if>
		</set>
		WHERE
			order_id=#{orderId,jdbcType=BIGINT}
	</update>

	<update id="updateOrderBatch" parameterType="java.util.List">
		UPDATE ms_order SET
		<foreach collection="list" item="item" index="index"
				separator="" open="status=CASE order_id" close="END,">
			WHEN #{item.order_id} THEN #{item.status,jdbcType=INTEGER}
		</foreach>
		<foreach collection="list" item="item" index="index"
				separator="" open="create_time=CASE order_id" close="END,">
			WHEN #{item.order_id} THEN #{item.createTime,jdbcType=TIMESTAMP}
		</foreach>
		<foreach collection="list" item="item" index="index"
				separator="" open="update_time=CASE order_id" close="END">
			WHEN #{item.order_id} THEN #{item.updateTime,jdbcType=TIMESTAMP}
		</foreach>
		WHERE order_id IN
		<foreach collection="list" item="item" index="index"
				separator="," open="(" close=")">
			WHEN #{item.order_id} THEN #{item.orderId,jdbcType=BIGINT}
		</foreach>
	</update>

	<update id="updateOrderBatchSelective" parameterType="java.util.List">
		UPDATE ms_order
		<trim prefix="SET" suffixOverrides=",">
			<trim prefix="status = CASE"  suffix="END,">
				<foreach collection="list" item="item" index="index">
					<if test="item.status != null">
						WHEN order_id=#{item.orderId} THEN #{item.status,jdbcType=INTEGER}
					</if>
				</foreach>
			</trim>
			<trim prefix="create_time = CASE"  suffix="END,">
				<foreach collection="list" item="item" index="index">
					<if test="item.createTime != null">
						WHEN order_id=#{item.orderId} THEN #{item.createTime,jdbcType=TIMESTAMP}
					</if>
				</foreach>
			</trim>
			<trim prefix="update_time = CASE"  suffix="END,">
				<foreach collection="list" item="item" index="index">
					<if test="item.updateTime != null">
						WHEN order_id=#{item.orderId} THEN #{item.updateTime,jdbcType=TIMESTAMP}
					</if>
				</foreach>
			</trim>
		</trim>
		WHERE
		<foreach collection="list" separator="OR" item="item" index="index" >
			order_id=#{item.orderId}
		</foreach>
	</update>

</mapper>

